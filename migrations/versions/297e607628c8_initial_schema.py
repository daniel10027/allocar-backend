"""initial schema

Revision ID: 297e607628c8
Revises: 
Create Date: 2025-09-17 19:15:19.891786
"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '297e607628c8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('audit_logs',
    sa.Column('actor_type', sa.String(length=16), nullable=False),
    sa.Column('actor_id', sa.String(length=64), nullable=True),
    sa.Column('action', sa.String(length=64), nullable=False),
    sa.Column('entity', sa.String(length=64), nullable=False),
    sa.Column('entity_id', sa.String(length=64), nullable=True),
    sa.Column('meta', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_audit_logs'))
    )
    op.create_table('promos',
    sa.Column('code', sa.String(length=40), nullable=False),
    sa.Column('type', sa.String(length=16), nullable=False),
    sa.Column('value', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('max_uses', sa.Integer(), nullable=False),
    sa.Column('per_user_limit', sa.Integer(), nullable=False),
    sa.Column('starts_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('ends_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.String(length=16), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_promos'))
    )
    op.create_index(op.f('ix_promos_code'), 'promos', ['code'], unique=True)
    op.create_table('users',
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=32), nullable=True),
    sa.Column('password_hash', sa.String(length=255), nullable=True),
    sa.Column('first_name', sa.String(length=120), nullable=True),
    sa.Column('last_name', sa.String(length=120), nullable=True),
    sa.Column('photo_url', sa.String(length=512), nullable=True),
    sa.Column('role', sa.String(length=32), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_email_verified', sa.Boolean(), nullable=True),
    sa.Column('is_phone_verified', sa.Boolean(), nullable=True),
    sa.Column('rating_avg', sa.Numeric(precision=3, scale=2), nullable=False),
    sa.Column('rating_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email')),
    sa.UniqueConstraint('phone', name=op.f('uq_users_phone'))
    )
    op.create_table('kyc_documents',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('doc_type', sa.String(length=32), nullable=False),
    sa.Column('doc_number', sa.String(length=64), nullable=False),
    sa.Column('front_url', sa.String(length=512), nullable=False),
    sa.Column('back_url', sa.String(length=512), nullable=True),
    sa.Column('status', sa.String(length=16), nullable=False),
    sa.Column('notes', sa.String(length=512), nullable=True),
    sa.Column('reviewed_by', sa.UUID(), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['reviewed_by'], ['users.id'], name=op.f('fk_kyc_documents_reviewed_by_users')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_kyc_documents_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_kyc_documents'))
    )
    op.create_index(op.f('ix_kyc_documents_user_id'), 'kyc_documents', ['user_id'], unique=False)
    op.create_table('referrals',
    sa.Column('referrer_id', sa.UUID(), nullable=False),
    sa.Column('referee_id', sa.UUID(), nullable=False),
    sa.Column('code_used', sa.String(length=40), nullable=False),
    sa.Column('bonus_referrer', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('bonus_referee', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('status', sa.String(length=16), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['referee_id'], ['users.id'], name=op.f('fk_referrals_referee_id_users'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['referrer_id'], ['users.id'], name=op.f('fk_referrals_referrer_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_referrals'))
    )
    op.create_index(op.f('ix_referrals_referee_id'), 'referrals', ['referee_id'], unique=True)
    op.create_index(op.f('ix_referrals_referrer_id'), 'referrals', ['referrer_id'], unique=False)
    op.create_table('trips',
    sa.Column('driver_id', sa.UUID(), nullable=False),
    sa.Column('origin_lat', sa.Float(), nullable=False),
    sa.Column('origin_lon', sa.Float(), nullable=False),
    sa.Column('origin_text', sa.String(length=255), nullable=False),
    sa.Column('destination_lat', sa.Float(), nullable=False),
    sa.Column('destination_lon', sa.Float(), nullable=False),
    sa.Column('destination_text', sa.String(length=255), nullable=False),
    sa.Column('departure_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('arrival_eta', sa.DateTime(timezone=True), nullable=True),
    sa.Column('price_per_seat', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('seats_available', sa.Integer(), nullable=False),
    sa.Column('luggage_policy', sa.String(length=255), nullable=True),
    sa.Column('rules', sa.String(length=255), nullable=True),
    sa.Column('allow_auto_accept', sa.Boolean(), nullable=True),
    sa.Column('status', sa.String(length=32), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['driver_id'], ['users.id'], name=op.f('fk_trips_driver_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_trips'))
    )
    op.create_index(op.f('ix_trips_driver_id'), 'trips', ['driver_id'], unique=False)
    op.create_table('vehicles',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('make', sa.String(length=120), nullable=False),
    sa.Column('model', sa.String(length=120), nullable=False),
    sa.Column('color', sa.String(length=50), nullable=True),
    sa.Column('plate_number', sa.String(length=32), nullable=False),
    sa.Column('seats_total', sa.Integer(), nullable=False),
    sa.Column('comfort_level', sa.String(length=32), nullable=False),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('verified', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_vehicles_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_vehicles')),
    sa.UniqueConstraint('plate_number', name=op.f('uq_vehicles_plate_number'))
    )
    op.create_index(op.f('ix_vehicles_user_id'), 'vehicles', ['user_id'], unique=False)
    op.create_table('wallets',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('balance', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=8), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_wallets_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_wallets'))
    )
    op.create_index(op.f('ix_wallets_user_id'), 'wallets', ['user_id'], unique=True)
    op.create_table('bookings',
    sa.Column('trip_id', sa.UUID(), nullable=False),
    sa.Column('passenger_id', sa.UUID(), nullable=False),
    sa.Column('seats', sa.Integer(), nullable=False),
    sa.Column('amount_total', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('status', sa.String(length=32), nullable=False),
    sa.Column('qr_code', sa.String(length=64), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['passenger_id'], ['users.id'], name=op.f('fk_bookings_passenger_id_users'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['trip_id'], ['trips.id'], name=op.f('fk_bookings_trip_id_trips'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_bookings'))
    )
    op.create_index(op.f('ix_bookings_passenger_id'), 'bookings', ['passenger_id'], unique=False)
    op.create_index(op.f('ix_bookings_trip_id'), 'bookings', ['trip_id'], unique=False)
    op.create_table('trip_stops',
    sa.Column('trip_id', sa.UUID(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('lat', sa.Float(), nullable=False),
    sa.Column('lon', sa.Float(), nullable=False),
    sa.Column('label', sa.String(length=255), nullable=False),
    sa.Column('pickup_allowed', sa.Boolean(), nullable=True),
    sa.Column('dropoff_allowed', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['trip_id'], ['trips.id'], name=op.f('fk_trip_stops_trip_id_trips'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_trip_stops'))
    )
    op.create_index(op.f('ix_trip_stops_trip_id'), 'trip_stops', ['trip_id'], unique=False)
    op.create_table('wallet_txns',
    sa.Column('wallet_id', sa.UUID(), nullable=False),
    sa.Column('type', sa.String(length=16), nullable=False),
    sa.Column('amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('source', sa.String(length=32), nullable=False),
    sa.Column('ref', sa.String(length=128), nullable=True),
    sa.Column('status', sa.String(length=16), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['wallet_id'], ['wallets.id'], name=op.f('fk_wallet_txns_wallet_id_wallets'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_wallet_txns'))
    )
    op.create_index(op.f('ix_wallet_txns_wallet_id'), 'wallet_txns', ['wallet_id'], unique=False)
    op.create_table('booking_events',
    sa.Column('booking_id', sa.UUID(), nullable=False),
    sa.Column('from_status', sa.String(length=32), nullable=True),
    sa.Column('to_status', sa.String(length=32), nullable=False),
    sa.Column('by', sa.String(length=32), nullable=False),
    sa.Column('meta', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], name=op.f('fk_booking_events_booking_id_bookings'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_booking_events'))
    )
    op.create_index(op.f('ix_booking_events_booking_id'), 'booking_events', ['booking_id'], unique=False)
    op.create_table('disputes',
    sa.Column('booking_id', sa.UUID(), nullable=False),
    sa.Column('opened_by', sa.UUID(), nullable=False),
    sa.Column('category', sa.String(length=64), nullable=False),
    sa.Column('description', sa.String(length=1024), nullable=False),
    sa.Column('status', sa.String(length=16), nullable=False),
    sa.Column('resolution', sa.String(length=1024), nullable=True),
    sa.Column('resolved_by', sa.UUID(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], name=op.f('fk_disputes_booking_id_bookings'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['opened_by'], ['users.id'], name=op.f('fk_disputes_opened_by_users'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['resolved_by'], ['users.id'], name=op.f('fk_disputes_resolved_by_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_disputes'))
    )
    op.create_index(op.f('ix_disputes_booking_id'), 'disputes', ['booking_id'], unique=False)
    op.create_index(op.f('ix_disputes_opened_by'), 'disputes', ['opened_by'], unique=False)
    op.create_table('messages',
    sa.Column('booking_id', sa.UUID(), nullable=False),
    sa.Column('from_user_id', sa.UUID(), nullable=False),
    sa.Column('type', sa.String(length=16), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], name=op.f('fk_messages_booking_id_bookings'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['from_user_id'], ['users.id'], name=op.f('fk_messages_from_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_messages'))
    )
    op.create_index(op.f('ix_messages_booking_id'), 'messages', ['booking_id'], unique=False)
    op.create_index(op.f('ix_messages_from_user_id'), 'messages', ['from_user_id'], unique=False)
    op.create_table('payments',
    sa.Column('booking_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('method', sa.String(length=32), nullable=False),
    sa.Column('provider_ref', sa.String(length=128), nullable=True),
    sa.Column('amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=8), nullable=False),
    sa.Column('fees', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('status', sa.String(length=32), nullable=False),
    sa.Column('raw_payload', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], name=op.f('fk_payments_booking_id_bookings'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_payments_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_payments'))
    )
    op.create_index(op.f('ix_payments_booking_id'), 'payments', ['booking_id'], unique=False)
    op.create_index(op.f('ix_payments_provider_ref'), 'payments', ['provider_ref'], unique=True)
    op.create_index(op.f('ix_payments_user_id'), 'payments', ['user_id'], unique=False)
    op.create_table('promo_usages',
    sa.Column('promo_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('booking_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], name=op.f('fk_promo_usages_booking_id_bookings'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['promo_id'], ['promos.id'], name=op.f('fk_promo_usages_promo_id_promos'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_promo_usages_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_promo_usages'))
    )
    op.create_index(op.f('ix_promo_usages_booking_id'), 'promo_usages', ['booking_id'], unique=False)
    op.create_index(op.f('ix_promo_usages_promo_id'), 'promo_usages', ['promo_id'], unique=False)
    op.create_index(op.f('ix_promo_usages_user_id'), 'promo_usages', ['user_id'], unique=False)
    op.create_table('ratings',
    sa.Column('from_user_id', sa.UUID(), nullable=False),
    sa.Column('to_user_id', sa.UUID(), nullable=False),
    sa.Column('booking_id', sa.UUID(), nullable=False),
    sa.Column('stars', sa.Integer(), nullable=False),
    sa.Column('comment', sa.String(length=512), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], name=op.f('fk_ratings_booking_id_bookings'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['from_user_id'], ['users.id'], name=op.f('fk_ratings_from_user_id_users'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['to_user_id'], ['users.id'], name=op.f('fk_ratings_to_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ratings'))
    )
    op.create_index(op.f('ix_ratings_booking_id'), 'ratings', ['booking_id'], unique=False)
    op.create_index(op.f('ix_ratings_from_user_id'), 'ratings', ['from_user_id'], unique=False)
    op.create_index(op.f('ix_ratings_to_user_id'), 'ratings', ['to_user_id'], unique=False)
    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_ratings_to_user_id'), table_name='ratings')
    op.drop_index(op.f('ix_ratings_from_user_id'), table_name='ratings')
    op.drop_index(op.f('ix_ratings_booking_id'), table_name='ratings')
    op.drop_table('ratings')
    op.drop_index(op.f('ix_promo_usages_user_id'), table_name='promo_usages')
    op.drop_index(op.f('ix_promo_usages_promo_id'), table_name='promo_usages')
    op.drop_index(op.f('ix_promo_usages_booking_id'), table_name='promo_usages')
    op.drop_table('promo_usages')
    op.drop_index(op.f('ix_payments_user_id'), table_name='payments')
    op.drop_index(op.f('ix_payments_provider_ref'), table_name='payments')
    op.drop_index(op.f('ix_payments_booking_id'), table_name='payments')
    op.drop_table('payments')
    op.drop_index(op.f('ix_messages_from_user_id'), table_name='messages')
    op.drop_index(op.f('ix_messages_booking_id'), table_name='messages')
    op.drop_table('messages')
    op.drop_index(op.f('ix_disputes_opened_by'), table_name='disputes')
    op.drop_index(op.f('ix_disputes_booking_id'), table_name='disputes')
    op.drop_table('disputes')
    op.drop_index(op.f('ix_booking_events_booking_id'), table_name='booking_events')
    op.drop_table('booking_events')
    op.drop_index(op.f('ix_wallet_txns_wallet_id'), table_name='wallet_txns')
    op.drop_table('wallet_txns')
    op.drop_index(op.f('ix_trip_stops_trip_id'), table_name='trip_stops')
    op.drop_table('trip_stops')
    op.drop_index(op.f('ix_bookings_trip_id'), table_name='bookings')
    op.drop_index(op.f('ix_bookings_passenger_id'), table_name='bookings')
    op.drop_table('bookings')
    op.drop_index(op.f('ix_wallets_user_id'), table_name='wallets')
    op.drop_table('wallets')
    op.drop_index(op.f('ix_vehicles_user_id'), table_name='vehicles')
    op.drop_table('vehicles')
    op.drop_index(op.f('ix_trips_driver_id'), table_name='trips')
    op.drop_table('trips')
    op.drop_index(op.f('ix_referrals_referrer_id'), table_name='referrals')
    op.drop_index(op.f('ix_referrals_referee_id'), table_name='referrals')
    op.drop_table('referrals')
    op.drop_index(op.f('ix_kyc_documents_user_id'), table_name='kyc_documents')
    op.drop_table('kyc_documents')
    op.drop_table('users')
    op.drop_index(op.f('ix_promos_code'), table_name='promos')
    op.drop_table('promos')
    op.drop_table('audit_logs')
    # ### end Alembic commands ###
